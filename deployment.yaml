apiVersion: apps/v1
kind: Deployment
metadata:
  name: laravel-app-deployment
  labels:
    app: laravel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: laravel
  template:
    metadata:
      labels:
        app: laravel
    spec:
      # InitContainers run and complete before the main containers start.
      initContainers:
        - name: git-cloner
          # A simple image that contains git
          image: alpine/git:latest
          # The command to clone your public repository into the shared volume
          command: ["/bin/sh", "-c"]
          args:
            - >
              git clone https://github.com/lyvathanak/Final.git /app &&
              chown -R 1000:1000 /app
          # Mount the shared volume
          volumeMounts:
            - name: app-code
              mountPath: /app

      # Main containers
      containers:
        # Container 1: Web Server (PHP-FPM + NGINX)
        - name: web-server
          # A valid, public image for PHP 8.2 and NGINX
          image: webdevops/php-nginx:8.2-alpine
          ports:
            - containerPort: 80 # This image exposes port 80 by default
          # Mount the shared volume where the code was cloned
          volumeMounts:
            - name: app-code
              mountPath: /app

        # Container 2: MySQL Database
        - name: mysql-db
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: "lyvathanak-db"
            - name: MYSQL_ROOT_PASSWORD
              value: "Hello@123"
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql

      # Volumes to share data between containers
      volumes:
        - name: app-code
          emptyDir: {}
        - name: mysql-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: laravel-app-service
spec:
  selector:
    app: laravel
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
